/* **DO NOT EDIT THIS FILE** */
/*
 * Copyright 2004 Sun Microsystems, Inc. All Rights Reserved.
 *
 * This software is the proprietary information of Sun Microsystems, Inc.
 * Use is subject to license terms.
 *
 * This is a part of the Squawk JVM.
 */

package com.sun.squawk.vm;

/**
 * This class defines the native bytecodes used in the Squawk system.
 * It was automatically generated as a part of the build process
 * and should not be edited by hand.
 *
 * @author   Nik Shaylor
 */
public final class Native {

    public final static int java_lang_VM$addToClassStateCache             = 0;
    public final static int java_lang_VM$allocate                         = 1;
    public final static int java_lang_VM$allocateVirtualStack             = 2;
    public final static int java_lang_VM$asKlass                          = 3;
    public final static int java_lang_VM$asThread                         = 4;
    public final static int java_lang_VM$callStaticNoParm                 = 5;
    public final static int java_lang_VM$callStaticOneParm                = 6;
    public final static int java_lang_VM$deadbeef                         = 7;
    public final static int java_lang_VM$executeCIO                       = 8;
    public final static int java_lang_VM$executeCOG                       = 9;
    public final static int java_lang_VM$executeGC                        = 10;
    public final static int java_lang_VM$fatalVMError                     = 11;
    public final static int java_lang_VM$getBranchCount                   = 12;
    public final static int java_lang_VM$getFP                            = 13;
    public final static int java_lang_VM$getGlobalAddr                    = 14;
    public final static int java_lang_VM$getGlobalAddrCount               = 15;
    public final static int java_lang_VM$getGlobalInt                     = 16;
    public final static int java_lang_VM$getGlobalIntCount                = 17;
    public final static int java_lang_VM$getGlobalOop                     = 18;
    public final static int java_lang_VM$getGlobalOopCount                = 19;
    public final static int java_lang_VM$getGlobalOopTable                = 20;
    public final static int java_lang_VM$getMP                            = 21;
    public final static int java_lang_VM$getPreviousFP                    = 22;
    public final static int java_lang_VM$getPreviousIP                    = 23;
    public final static int java_lang_VM$hasVirtualMonitorObject          = 24;
    public final static int java_lang_VM$hashcode                         = 25;
    public final static int java_lang_VM$invalidateClassStateCache        = 26;
    public final static int java_lang_VM$isBigEndian                      = 27;
    public final static int java_lang_VM$removeVirtualMonitorObject       = 28;
    public final static int java_lang_VM$serviceResult                    = 29;
    public final static int java_lang_VM$setGlobalAddr                    = 30;
    public final static int java_lang_VM$setGlobalInt                     = 31;
    public final static int java_lang_VM$setGlobalOop                     = 32;
    public final static int java_lang_VM$setPreviousFP                    = 33;
    public final static int java_lang_VM$setPreviousIP                    = 34;
    public final static int java_lang_VM$threadSwitch                     = 35;
    public final static int java_lang_VM$zeroWords                        = 36;
    public final static int java_lang_Address$add                         = 37;
    public final static int java_lang_Address$addOffset                   = 38;
    public final static int java_lang_Address$and                         = 39;
    public final static int java_lang_Address$diff                        = 40;
    public final static int java_lang_Address$eq                          = 41;
    public final static int java_lang_Address$fromObject                  = 42;
    public final static int java_lang_Address$fromPrimitive               = 43;
    public final static int java_lang_Address$hi                          = 44;
    public final static int java_lang_Address$hieq                        = 45;
    public final static int java_lang_Address$isMax                       = 46;
    public final static int java_lang_Address$isZero                      = 47;
    public final static int java_lang_Address$lo                          = 48;
    public final static int java_lang_Address$loeq                        = 49;
    public final static int java_lang_Address$max                         = 50;
    public final static int java_lang_Address$ne                          = 51;
    public final static int java_lang_Address$or                          = 52;
    public final static int java_lang_Address$roundDown                   = 53;
    public final static int java_lang_Address$roundDownToWord             = 54;
    public final static int java_lang_Address$roundUp                     = 55;
    public final static int java_lang_Address$roundUpToWord               = 56;
    public final static int java_lang_Address$sub                         = 57;
    public final static int java_lang_Address$subOffset                   = 58;
    public final static int java_lang_Address$toObject                    = 59;
    public final static int java_lang_Address$toUWord                     = 60;
    public final static int java_lang_Address$zero                        = 61;
    public final static int java_lang_UWord$and                           = 62;
    public final static int java_lang_UWord$eq                            = 63;
    public final static int java_lang_UWord$fromPrimitive                 = 64;
    public final static int java_lang_UWord$hi                            = 65;
    public final static int java_lang_UWord$hieq                          = 66;
    public final static int java_lang_UWord$isMax                         = 67;
    public final static int java_lang_UWord$isZero                        = 68;
    public final static int java_lang_UWord$lo                            = 69;
    public final static int java_lang_UWord$loeq                          = 70;
    public final static int java_lang_UWord$max                           = 71;
    public final static int java_lang_UWord$ne                            = 72;
    public final static int java_lang_UWord$or                            = 73;
    public final static int java_lang_UWord$toInt                         = 74;
    public final static int java_lang_UWord$toOffset                      = 75;
    public final static int java_lang_UWord$toPrimitive                   = 76;
    public final static int java_lang_UWord$zero                          = 77;
    public final static int java_lang_Offset$add                          = 78;
    public final static int java_lang_Offset$bytesToWords                 = 79;
    public final static int java_lang_Offset$eq                           = 80;
    public final static int java_lang_Offset$fromPrimitive                = 81;
    public final static int java_lang_Offset$ge                           = 82;
    public final static int java_lang_Offset$gt                           = 83;
    public final static int java_lang_Offset$isZero                       = 84;
    public final static int java_lang_Offset$le                           = 85;
    public final static int java_lang_Offset$lt                           = 86;
    public final static int java_lang_Offset$ne                           = 87;
    public final static int java_lang_Offset$sub                          = 88;
    public final static int java_lang_Offset$toInt                        = 89;
    public final static int java_lang_Offset$toPrimitive                  = 90;
    public final static int java_lang_Offset$toUWord                      = 91;
    public final static int java_lang_Offset$wordsToBytes                 = 92;
    public final static int java_lang_Offset$zero                         = 93;
    public final static int java_lang_Unsafe$charAt                       = 94;
    public final static int java_lang_Unsafe$copyTypes                    = 95;
    public final static int java_lang_Unsafe$getAsByte                    = 96;
    public final static int java_lang_Unsafe$getAsUWord                   = 97;
    public final static int java_lang_Unsafe$getByte                      = 98;
    public final static int java_lang_Unsafe$getChar                      = 99;
    public final static int java_lang_Unsafe$getInt                       = 100;
    public final static int java_lang_Unsafe$getLong                      = 101;
    public final static int java_lang_Unsafe$getLongAtWord                = 102;
    public final static int java_lang_Unsafe$getObject                    = 103;
    public final static int java_lang_Unsafe$getShort                     = 104;
    public final static int java_lang_Unsafe$getType                      = 105;
    public final static int java_lang_Unsafe$getUWord                     = 106;
    public final static int java_lang_Unsafe$setAddress                   = 107;
    public final static int java_lang_Unsafe$setByte                      = 108;
    public final static int java_lang_Unsafe$setChar                      = 109;
    public final static int java_lang_Unsafe$setInt                       = 110;
    public final static int java_lang_Unsafe$setLong                      = 111;
    public final static int java_lang_Unsafe$setLongAtWord                = 112;
    public final static int java_lang_Unsafe$setObject                    = 113;
    public final static int java_lang_Unsafe$setShort                     = 114;
    public final static int java_lang_Unsafe$setType                      = 115;
    public final static int java_lang_Unsafe$setUWord                     = 116;
    public final static int java_lang_CheneyCollector$memoryProtect       = 117;
    public final static int java_lang_ServiceOperation$cioExecute         = 118;
    public final static int java_lang_Lisp2Bitmap$clearBitFor             = 119;
    public final static int java_lang_Lisp2Bitmap$clearBitsFor            = 120;
    public final static int java_lang_Lisp2Bitmap$getAddressForBitmapWord = 121;
    public final static int java_lang_Lisp2Bitmap$getAddressOfBitmapWordFor = 122;
    public final static int java_lang_Lisp2Bitmap$iterate                 = 123;
    public final static int java_lang_Lisp2Bitmap$setBitFor               = 124;
    public final static int java_lang_Lisp2Bitmap$testAndSetBitFor        = 125;
    public final static int java_lang_Lisp2Bitmap$testBitFor              = 126;
    public final static int java_lang_VM$lcmp                             = 127;
/*if[FLOATS]*/
    public final static int java_lang_VM$fcmpl                            = 128;
    public final static int java_lang_VM$fcmpg                            = 129;
    public final static int java_lang_VM$dcmpl                            = 130;
    public final static int java_lang_VM$dcmpg                            = 131;
    public final static int java_lang_VM$math                             = 132;
    public final static int java_lang_VM$floatToIntBits                   = 133;
    public final static int java_lang_VM$doubleToLongBits                 = 134;
    public final static int java_lang_VM$intBitsToFloat                   = 135;
    public final static int java_lang_VM$longBitsToDouble                 = 136;
/*end[FLOATS]*/
    public final static int ENTRY_COUNT                                   = /*VAL*/false/*FLOATS*/ ? 137 : 128;
}
