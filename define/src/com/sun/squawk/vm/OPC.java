/* **DO NOT EDIT THIS FILE** */
/*
 * Copyright 2004 Sun Microsystems, Inc. All Rights Reserved.
 *
 * This software is the proprietary information of Sun Microsystems, Inc.
 * Use is subject to license terms.
 *
 * This is a part of the Squawk JVM.
 */

package com.sun.squawk.vm;

/**
 * This class defines the bytecodes used in the Squawk system.
 * It was automatically generated as a part of the build process
 * and should not be edited by hand.
 *
 * @author   Nik Shaylor, Doug Simon
 */
public final class OPC {

    public final static int
        CONST_0                = 0,
        CONST_1                = 1,
        CONST_2                = 2,
        CONST_3                = 3,
        CONST_4                = 4,
        CONST_5                = 5,
        CONST_6                = 6,
        CONST_7                = 7,
        CONST_8                = 8,
        CONST_9                = 9,
        CONST_10               = 10,
        CONST_11               = 11,
        CONST_12               = 12,
        CONST_13               = 13,
        CONST_14               = 14,
        CONST_15               = 15,
        OBJECT_0               = 16,
        OBJECT_1               = 17,
        OBJECT_2               = 18,
        OBJECT_3               = 19,
        OBJECT_4               = 20,
        OBJECT_5               = 21,
        OBJECT_6               = 22,
        OBJECT_7               = 23,
        OBJECT_8               = 24,
        OBJECT_9               = 25,
        OBJECT_10              = 26,
        OBJECT_11              = 27,
        OBJECT_12              = 28,
        OBJECT_13              = 29,
        OBJECT_14              = 30,
        OBJECT_15              = 31,
        LOAD_0                 = 32,
        LOAD_1                 = 33,
        LOAD_2                 = 34,
        LOAD_3                 = 35,
        LOAD_4                 = 36,
        LOAD_5                 = 37,
        LOAD_6                 = 38,
        LOAD_7                 = 39,
        LOAD_8                 = 40,
        LOAD_9                 = 41,
        LOAD_10                = 42,
        LOAD_11                = 43,
        LOAD_12                = 44,
        LOAD_13                = 45,
        LOAD_14                = 46,
        LOAD_15                = 47,
        STORE_0                = 48,
        STORE_1                = 49,
        STORE_2                = 50,
        STORE_3                = 51,
        STORE_4                = 52,
        STORE_5                = 53,
        STORE_6                = 54,
        STORE_7                = 55,
        STORE_8                = 56,
        STORE_9                = 57,
        STORE_10               = 58,
        STORE_11               = 59,
        STORE_12               = 60,
        STORE_13               = 61,
        STORE_14               = 62,
        STORE_15               = 63,
        LOADPARM_0             = 64,
        LOADPARM_1             = 65,
        LOADPARM_2             = 66,
        LOADPARM_3             = 67,
        LOADPARM_4             = 68,
        LOADPARM_5             = 69,
        LOADPARM_6             = 70,
        LOADPARM_7             = 71,
        WIDE_M1                = 72,
        WIDE_0                 = 73,
        WIDE_1                 = 74,
        WIDE_SHORT             = 75,
        WIDE_INT               = 76,
        ESCAPE                 = 77,
        ESCAPE_WIDE_M1         = 78,
        ESCAPE_WIDE_0          = 79,
        ESCAPE_WIDE_1          = 80,
        ESCAPE_WIDE_SHORT      = 81,
        ESCAPE_WIDE_INT        = 82,
        CATCH                  = 83,
        CONST_NULL             = 84,
        CONST_M1               = 85,
        CONST_BYTE             = 86,
        CONST_SHORT            = 87,
        CONST_CHAR             = 88,
        CONST_INT              = 89,
        CONST_LONG             = 90,
        OBJECT                 = 91,
        LOAD                   = 92,
        LOAD_I2                = 93,
        STORE                  = 94,
        STORE_I2               = 95,
        LOADPARM               = 96,
        LOADPARM_I2            = 97,
        STOREPARM              = 98,
        STOREPARM_I2           = 99,
        INC                    = 100,
        DEC                    = 101,
        INCPARM                = 102,
        DECPARM                = 103,
        GOTO                   = 104,
        IF_EQ_O                = 105,
        IF_NE_O                = 106,
        IF_CMPEQ_O             = 107,
        IF_CMPNE_O             = 108,
        IF_EQ_I                = 109,
        IF_NE_I                = 110,
        IF_LT_I                = 111,
        IF_LE_I                = 112,
        IF_GT_I                = 113,
        IF_GE_I                = 114,
        IF_CMPEQ_I             = 115,
        IF_CMPNE_I             = 116,
        IF_CMPLT_I             = 117,
        IF_CMPLE_I             = 118,
        IF_CMPGT_I             = 119,
        IF_CMPGE_I             = 120,
        IF_EQ_L                = 121,
        IF_NE_L                = 122,
        IF_LT_L                = 123,
        IF_LE_L                = 124,
        IF_GT_L                = 125,
        IF_GE_L                = 126,
        IF_CMPEQ_L             = 127,
        IF_CMPNE_L             = 128,
        IF_CMPLT_L             = 129,
        IF_CMPLE_L             = 130,
        IF_CMPGT_L             = 131,
        IF_CMPGE_L             = 132,
        GETSTATIC_I            = 133,
        GETSTATIC_O            = 134,
        GETSTATIC_L            = 135,
        CLASS_GETSTATIC_I      = 136,
        CLASS_GETSTATIC_O      = 137,
        CLASS_GETSTATIC_L      = 138,
        PUTSTATIC_I            = 139,
        PUTSTATIC_O            = 140,
        PUTSTATIC_L            = 141,
        CLASS_PUTSTATIC_I      = 142,
        CLASS_PUTSTATIC_O      = 143,
        CLASS_PUTSTATIC_L      = 144,
        GETFIELD_I             = 145,
        GETFIELD_B             = 146,
        GETFIELD_S             = 147,
        GETFIELD_C             = 148,
        GETFIELD_O             = 149,
        GETFIELD_L             = 150,
        THIS_GETFIELD_I        = 151,
        THIS_GETFIELD_B        = 152,
        THIS_GETFIELD_S        = 153,
        THIS_GETFIELD_C        = 154,
        THIS_GETFIELD_O        = 155,
        THIS_GETFIELD_L        = 156,
        PUTFIELD_I             = 157,
        PUTFIELD_B             = 158,
        PUTFIELD_S             = 159,
        PUTFIELD_O             = 160,
        PUTFIELD_L             = 161,
        THIS_PUTFIELD_I        = 162,
        THIS_PUTFIELD_B        = 163,
        THIS_PUTFIELD_S        = 164,
        THIS_PUTFIELD_O        = 165,
        THIS_PUTFIELD_L        = 166,
        INVOKEVIRTUAL_I        = 167,
        INVOKEVIRTUAL_V        = 168,
        INVOKEVIRTUAL_L        = 169,
        INVOKEVIRTUAL_O        = 170,
        INVOKESTATIC_I         = 171,
        INVOKESTATIC_V         = 172,
        INVOKESTATIC_L         = 173,
        INVOKESTATIC_O         = 174,
        INVOKESUPER_I          = 175,
        INVOKESUPER_V          = 176,
        INVOKESUPER_L          = 177,
        INVOKESUPER_O          = 178,
        INVOKENATIVE_I         = 179,
        INVOKENATIVE_V         = 180,
        INVOKENATIVE_L         = 181,
        INVOKENATIVE_O         = 182,
        FINDSLOT               = 183,
        EXTEND                 = 184,
        INVOKESLOT_I           = 185,
        INVOKESLOT_V           = 186,
        INVOKESLOT_L           = 187,
        INVOKESLOT_O           = 188,
        RETURN_V               = 189,
        RETURN_I               = 190,
        RETURN_L               = 191,
        RETURN_O               = 192,
        TABLESWITCH_I          = 193,
        TABLESWITCH_S          = 194,
        EXTEND0                = 195,
        ADD_I                  = 196,
        SUB_I                  = 197,
        AND_I                  = 198,
        OR_I                   = 199,
        XOR_I                  = 200,
        SHL_I                  = 201,
        SHR_I                  = 202,
        USHR_I                 = 203,
        MUL_I                  = 204,
        DIV_I                  = 205,
        REM_I                  = 206,
        NEG_I                  = 207,
        I2B                    = 208,
        I2S                    = 209,
        I2C                    = 210,
        ADD_L                  = 211,
        SUB_L                  = 212,
        MUL_L                  = 213,
        DIV_L                  = 214,
        REM_L                  = 215,
        AND_L                  = 216,
        OR_L                   = 217,
        XOR_L                  = 218,
        NEG_L                  = 219,
        SHL_L                  = 220,
        SHR_L                  = 221,
        USHR_L                 = 222,
        L2I                    = 223,
        I2L                    = 224,
        THROW                  = 225,
        POP_1                  = 226,
        POP_2                  = 227,
        MONITORENTER           = 228,
        MONITOREXIT            = 229,
        CLASS_MONITORENTER     = 230,
        CLASS_MONITOREXIT      = 231,
        ARRAYLENGTH            = 232,
        NEW                    = 233,
        NEWARRAY               = 234,
        NEWDIMENSION           = 235,
        CLASS_CLINIT           = 236,
        BBTARGET_SYS           = 237,
        BBTARGET_APP           = 238,
        INSTANCEOF             = 239,
        CHECKCAST              = 240,
        ALOAD_I                = 241,
        ALOAD_B                = 242,
        ALOAD_S                = 243,
        ALOAD_C                = 244,
        ALOAD_O                = 245,
        ALOAD_L                = 246,
        ASTORE_I               = 247,
        ASTORE_B               = 248,
        ASTORE_S               = 249,
        ASTORE_O               = 250,
        ASTORE_L               = 251,
        LOOKUP_I               = 252,
        LOOKUP_B               = 253,
        LOOKUP_S               = 254,
        RES_0                  = 255,
/*if[FLOATS]*/
        IF_EQ_F                = 256,
        IF_NE_F                = 257,
        IF_LT_F                = 258,
        IF_LE_F                = 259,
        IF_GT_F                = 260,
        IF_GE_F                = 261,
        IF_CMPEQ_F             = 262,
        IF_CMPNE_F             = 263,
        IF_CMPLT_F             = 264,
        IF_CMPLE_F             = 265,
        IF_CMPGT_F             = 266,
        IF_CMPGE_F             = 267,
        IF_EQ_D                = 268,
        IF_NE_D                = 269,
        IF_LT_D                = 270,
        IF_LE_D                = 271,
        IF_GT_D                = 272,
        IF_GE_D                = 273,
        IF_CMPEQ_D             = 274,
        IF_CMPNE_D             = 275,
        IF_CMPLT_D             = 276,
        IF_CMPLE_D             = 277,
        IF_CMPGT_D             = 278,
        IF_CMPGE_D             = 279,
        GETSTATIC_F            = 280,
        GETSTATIC_D            = 281,
        CLASS_GETSTATIC_F      = 282,
        CLASS_GETSTATIC_D      = 283,
        PUTSTATIC_F            = 284,
        PUTSTATIC_D            = 285,
        CLASS_PUTSTATIC_F      = 286,
        CLASS_PUTSTATIC_D      = 287,
        GETFIELD_F             = 288,
        GETFIELD_D             = 289,
        THIS_GETFIELD_F        = 290,
        THIS_GETFIELD_D        = 291,
        PUTFIELD_F             = 292,
        PUTFIELD_D             = 293,
        THIS_PUTFIELD_F        = 294,
        THIS_PUTFIELD_D        = 295,
        INVOKEVIRTUAL_F        = 296,
        INVOKEVIRTUAL_D        = 297,
        INVOKESTATIC_F         = 298,
        INVOKESTATIC_D         = 299,
        INVOKESUPER_F          = 300,
        INVOKESUPER_D          = 301,
        INVOKENATIVE_F         = 302,
        INVOKENATIVE_D         = 303,
        INVOKESLOT_F           = 304,
        INVOKESLOT_D           = 305,
        RETURN_F               = 306,
        RETURN_D               = 307,
        CONST_FLOAT            = 308,
        CONST_DOUBLE           = 309,
        ADD_F                  = 310,
        SUB_F                  = 311,
        MUL_F                  = 312,
        DIV_F                  = 313,
        REM_F                  = 314,
        NEG_F                  = 315,
        ADD_D                  = 316,
        SUB_D                  = 317,
        MUL_D                  = 318,
        DIV_D                  = 319,
        REM_D                  = 320,
        NEG_D                  = 321,
        I2F                    = 322,
        L2F                    = 323,
        F2I                    = 324,
        F2L                    = 325,
        I2D                    = 326,
        L2D                    = 327,
        F2D                    = 328,
        D2I                    = 329,
        D2L                    = 330,
        D2F                    = 331,
        ALOAD_F                = 332,
        ALOAD_D                = 333,
        ASTORE_F               = 334,
        ASTORE_D               = 335,
/*end[FLOATS]*/
/*
 * Pseudo bytecodes.
 */
        OBJECT_WIDE            = /*VAL*/false/*FLOATS*/ ? 336 : 256,
        LOAD_WIDE              = /*VAL*/false/*FLOATS*/ ? 337 : 257,
        LOAD_I2_WIDE           = /*VAL*/false/*FLOATS*/ ? 338 : 258,
        STORE_WIDE             = /*VAL*/false/*FLOATS*/ ? 339 : 259,
        STORE_I2_WIDE          = /*VAL*/false/*FLOATS*/ ? 340 : 260,
        LOADPARM_WIDE          = /*VAL*/false/*FLOATS*/ ? 341 : 261,
        LOADPARM_I2_WIDE       = /*VAL*/false/*FLOATS*/ ? 342 : 262,
        STOREPARM_WIDE         = /*VAL*/false/*FLOATS*/ ? 343 : 263,
        STOREPARM_I2_WIDE      = /*VAL*/false/*FLOATS*/ ? 344 : 264,
        INC_WIDE               = /*VAL*/false/*FLOATS*/ ? 345 : 265,
        DEC_WIDE               = /*VAL*/false/*FLOATS*/ ? 346 : 266,
        INCPARM_WIDE           = /*VAL*/false/*FLOATS*/ ? 347 : 267,
        DECPARM_WIDE           = /*VAL*/false/*FLOATS*/ ? 348 : 268,
        GOTO_WIDE              = /*VAL*/false/*FLOATS*/ ? 349 : 269,
        IF_EQ_O_WIDE           = /*VAL*/false/*FLOATS*/ ? 350 : 270,
        IF_NE_O_WIDE           = /*VAL*/false/*FLOATS*/ ? 351 : 271,
        IF_CMPEQ_O_WIDE        = /*VAL*/false/*FLOATS*/ ? 352 : 272,
        IF_CMPNE_O_WIDE        = /*VAL*/false/*FLOATS*/ ? 353 : 273,
        IF_EQ_I_WIDE           = /*VAL*/false/*FLOATS*/ ? 354 : 274,
        IF_NE_I_WIDE           = /*VAL*/false/*FLOATS*/ ? 355 : 275,
        IF_LT_I_WIDE           = /*VAL*/false/*FLOATS*/ ? 356 : 276,
        IF_LE_I_WIDE           = /*VAL*/false/*FLOATS*/ ? 357 : 277,
        IF_GT_I_WIDE           = /*VAL*/false/*FLOATS*/ ? 358 : 278,
        IF_GE_I_WIDE           = /*VAL*/false/*FLOATS*/ ? 359 : 279,
        IF_CMPEQ_I_WIDE        = /*VAL*/false/*FLOATS*/ ? 360 : 280,
        IF_CMPNE_I_WIDE        = /*VAL*/false/*FLOATS*/ ? 361 : 281,
        IF_CMPLT_I_WIDE        = /*VAL*/false/*FLOATS*/ ? 362 : 282,
        IF_CMPLE_I_WIDE        = /*VAL*/false/*FLOATS*/ ? 363 : 283,
        IF_CMPGT_I_WIDE        = /*VAL*/false/*FLOATS*/ ? 364 : 284,
        IF_CMPGE_I_WIDE        = /*VAL*/false/*FLOATS*/ ? 365 : 285,
        IF_EQ_L_WIDE           = /*VAL*/false/*FLOATS*/ ? 366 : 286,
        IF_NE_L_WIDE           = /*VAL*/false/*FLOATS*/ ? 367 : 287,
        IF_LT_L_WIDE           = /*VAL*/false/*FLOATS*/ ? 368 : 288,
        IF_LE_L_WIDE           = /*VAL*/false/*FLOATS*/ ? 369 : 289,
        IF_GT_L_WIDE           = /*VAL*/false/*FLOATS*/ ? 370 : 290,
        IF_GE_L_WIDE           = /*VAL*/false/*FLOATS*/ ? 371 : 291,
        IF_CMPEQ_L_WIDE        = /*VAL*/false/*FLOATS*/ ? 372 : 292,
        IF_CMPNE_L_WIDE        = /*VAL*/false/*FLOATS*/ ? 373 : 293,
        IF_CMPLT_L_WIDE        = /*VAL*/false/*FLOATS*/ ? 374 : 294,
        IF_CMPLE_L_WIDE        = /*VAL*/false/*FLOATS*/ ? 375 : 295,
        IF_CMPGT_L_WIDE        = /*VAL*/false/*FLOATS*/ ? 376 : 296,
        IF_CMPGE_L_WIDE        = /*VAL*/false/*FLOATS*/ ? 377 : 297,
        GETSTATIC_I_WIDE       = /*VAL*/false/*FLOATS*/ ? 378 : 298,
        GETSTATIC_O_WIDE       = /*VAL*/false/*FLOATS*/ ? 379 : 299,
        GETSTATIC_L_WIDE       = /*VAL*/false/*FLOATS*/ ? 380 : 300,
        CLASS_GETSTATIC_I_WIDE = /*VAL*/false/*FLOATS*/ ? 381 : 301,
        CLASS_GETSTATIC_O_WIDE = /*VAL*/false/*FLOATS*/ ? 382 : 302,
        CLASS_GETSTATIC_L_WIDE = /*VAL*/false/*FLOATS*/ ? 383 : 303,
        PUTSTATIC_I_WIDE       = /*VAL*/false/*FLOATS*/ ? 384 : 304,
        PUTSTATIC_O_WIDE       = /*VAL*/false/*FLOATS*/ ? 385 : 305,
        PUTSTATIC_L_WIDE       = /*VAL*/false/*FLOATS*/ ? 386 : 306,
        CLASS_PUTSTATIC_I_WIDE = /*VAL*/false/*FLOATS*/ ? 387 : 307,
        CLASS_PUTSTATIC_O_WIDE = /*VAL*/false/*FLOATS*/ ? 388 : 308,
        CLASS_PUTSTATIC_L_WIDE = /*VAL*/false/*FLOATS*/ ? 389 : 309,
        GETFIELD_I_WIDE        = /*VAL*/false/*FLOATS*/ ? 390 : 310,
        GETFIELD_B_WIDE        = /*VAL*/false/*FLOATS*/ ? 391 : 311,
        GETFIELD_S_WIDE        = /*VAL*/false/*FLOATS*/ ? 392 : 312,
        GETFIELD_C_WIDE        = /*VAL*/false/*FLOATS*/ ? 393 : 313,
        GETFIELD_O_WIDE        = /*VAL*/false/*FLOATS*/ ? 394 : 314,
        GETFIELD_L_WIDE        = /*VAL*/false/*FLOATS*/ ? 395 : 315,
        THIS_GETFIELD_I_WIDE   = /*VAL*/false/*FLOATS*/ ? 396 : 316,
        THIS_GETFIELD_B_WIDE   = /*VAL*/false/*FLOATS*/ ? 397 : 317,
        THIS_GETFIELD_S_WIDE   = /*VAL*/false/*FLOATS*/ ? 398 : 318,
        THIS_GETFIELD_C_WIDE   = /*VAL*/false/*FLOATS*/ ? 399 : 319,
        THIS_GETFIELD_O_WIDE   = /*VAL*/false/*FLOATS*/ ? 400 : 320,
        THIS_GETFIELD_L_WIDE   = /*VAL*/false/*FLOATS*/ ? 401 : 321,
        PUTFIELD_I_WIDE        = /*VAL*/false/*FLOATS*/ ? 402 : 322,
        PUTFIELD_B_WIDE        = /*VAL*/false/*FLOATS*/ ? 403 : 323,
        PUTFIELD_S_WIDE        = /*VAL*/false/*FLOATS*/ ? 404 : 324,
        PUTFIELD_O_WIDE        = /*VAL*/false/*FLOATS*/ ? 405 : 325,
        PUTFIELD_L_WIDE        = /*VAL*/false/*FLOATS*/ ? 406 : 326,
        THIS_PUTFIELD_I_WIDE   = /*VAL*/false/*FLOATS*/ ? 407 : 327,
        THIS_PUTFIELD_B_WIDE   = /*VAL*/false/*FLOATS*/ ? 408 : 328,
        THIS_PUTFIELD_S_WIDE   = /*VAL*/false/*FLOATS*/ ? 409 : 329,
        THIS_PUTFIELD_O_WIDE   = /*VAL*/false/*FLOATS*/ ? 410 : 330,
        THIS_PUTFIELD_L_WIDE   = /*VAL*/false/*FLOATS*/ ? 411 : 331,
        INVOKEVIRTUAL_I_WIDE   = /*VAL*/false/*FLOATS*/ ? 412 : 332,
        INVOKEVIRTUAL_V_WIDE   = /*VAL*/false/*FLOATS*/ ? 413 : 333,
        INVOKEVIRTUAL_L_WIDE   = /*VAL*/false/*FLOATS*/ ? 414 : 334,
        INVOKEVIRTUAL_O_WIDE   = /*VAL*/false/*FLOATS*/ ? 415 : 335,
        INVOKESTATIC_I_WIDE    = /*VAL*/false/*FLOATS*/ ? 416 : 336,
        INVOKESTATIC_V_WIDE    = /*VAL*/false/*FLOATS*/ ? 417 : 337,
        INVOKESTATIC_L_WIDE    = /*VAL*/false/*FLOATS*/ ? 418 : 338,
        INVOKESTATIC_O_WIDE    = /*VAL*/false/*FLOATS*/ ? 419 : 339,
        INVOKESUPER_I_WIDE     = /*VAL*/false/*FLOATS*/ ? 420 : 340,
        INVOKESUPER_V_WIDE     = /*VAL*/false/*FLOATS*/ ? 421 : 341,
        INVOKESUPER_L_WIDE     = /*VAL*/false/*FLOATS*/ ? 422 : 342,
        INVOKESUPER_O_WIDE     = /*VAL*/false/*FLOATS*/ ? 423 : 343,
        INVOKENATIVE_I_WIDE    = /*VAL*/false/*FLOATS*/ ? 424 : 344,
        INVOKENATIVE_V_WIDE    = /*VAL*/false/*FLOATS*/ ? 425 : 345,
        INVOKENATIVE_L_WIDE    = /*VAL*/false/*FLOATS*/ ? 426 : 346,
        INVOKENATIVE_O_WIDE    = /*VAL*/false/*FLOATS*/ ? 427 : 347,
        FINDSLOT_WIDE          = /*VAL*/false/*FLOATS*/ ? 428 : 348,
        EXTEND_WIDE            = /*VAL*/false/*FLOATS*/ ? 429 : 349,
/*if[FLOATS]*/
        IF_EQ_F_WIDE           = 430,
        IF_NE_F_WIDE           = 431,
        IF_LT_F_WIDE           = 432,
        IF_LE_F_WIDE           = 433,
        IF_GT_F_WIDE           = 434,
        IF_GE_F_WIDE           = 435,
        IF_CMPEQ_F_WIDE        = 436,
        IF_CMPNE_F_WIDE        = 437,
        IF_CMPLT_F_WIDE        = 438,
        IF_CMPLE_F_WIDE        = 439,
        IF_CMPGT_F_WIDE        = 440,
        IF_CMPGE_F_WIDE        = 441,
        IF_EQ_D_WIDE           = 442,
        IF_NE_D_WIDE           = 443,
        IF_LT_D_WIDE           = 444,
        IF_LE_D_WIDE           = 445,
        IF_GT_D_WIDE           = 446,
        IF_GE_D_WIDE           = 447,
        IF_CMPEQ_D_WIDE        = 448,
        IF_CMPNE_D_WIDE        = 449,
        IF_CMPLT_D_WIDE        = 450,
        IF_CMPLE_D_WIDE        = 451,
        IF_CMPGT_D_WIDE        = 452,
        IF_CMPGE_D_WIDE        = 453,
        GETSTATIC_F_WIDE       = 454,
        GETSTATIC_D_WIDE       = 455,
        CLASS_GETSTATIC_F_WIDE = 456,
        CLASS_GETSTATIC_D_WIDE = 457,
        PUTSTATIC_F_WIDE       = 458,
        PUTSTATIC_D_WIDE       = 459,
        CLASS_PUTSTATIC_F_WIDE = 460,
        CLASS_PUTSTATIC_D_WIDE = 461,
        GETFIELD_F_WIDE        = 462,
        GETFIELD_D_WIDE        = 463,
        THIS_GETFIELD_F_WIDE   = 464,
        THIS_GETFIELD_D_WIDE   = 465,
        PUTFIELD_F_WIDE        = 466,
        PUTFIELD_D_WIDE        = 467,
        THIS_PUTFIELD_F_WIDE   = 468,
        THIS_PUTFIELD_D_WIDE   = 469,
        INVOKEVIRTUAL_F_WIDE   = 470,
        INVOKEVIRTUAL_D_WIDE   = 471,
        INVOKESTATIC_F_WIDE    = 472,
        INVOKESTATIC_D_WIDE    = 473,
        INVOKESUPER_F_WIDE     = 474,
        INVOKESUPER_D_WIDE     = 475,
        INVOKENATIVE_F_WIDE    = 476,
        INVOKENATIVE_D_WIDE    = 477,
/*end[FLOATS]*/
    DUMMY=0
;

public static final int CONST_0_COUNT=16;
public static final int OBJECT_0_COUNT=16;
public static final int LOAD_0_COUNT=16;
public static final int STORE_0_COUNT=16;
public static final int LOADPARM_0_COUNT=8;
public static final int RES_0_COUNT=1;

public static final int BYTECODE_COUNT               = /*VAL*/false/*FLOATS*/ ? 336 : 256;
public static final int FIRST_PARM_BYTECODE          = 91;
public static final int PARM_BYTECODE_COUNT          = 94;
public static final int FIRST_ESCAPE_PARM_BYTECODE   = /*VAL*/false/*FLOATS*/ ? 256 : -1;
public static final int ESCAPE_PARM_BYTECODE_COUNT   = /*VAL*/false/*FLOATS*/ ? 48 : 0;
public static final int FIRST_WIDE_PSEUDOCODE        = BYTECODE_COUNT;
public static final int FIRST_ESCAPE_WIDE_PSEUDOCODE = /*VAL*/false/*FLOATS*/ ? 430 : -1;
public static final int PSEUDOCODE_COUNT             = /*VAL*/false/*FLOATS*/ ? 142 : 94;
public static final int WIDE_DELTA                   = FIRST_WIDE_PSEUDOCODE        - FIRST_PARM_BYTECODE;
public static final int ESCAPE_WIDE_DELTA            = FIRST_ESCAPE_WIDE_PSEUDOCODE - FIRST_ESCAPE_PARM_BYTECODE;

public static final String LENGTH_TABLE = "\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0003\u0003\u0005\u0009\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0001\u0001\u0001\u0001\u0005\u0009\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001";
public static final String STACK_EFFECT_TABLE = "\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0001\u0002\u00ff\u00fe\u0001\u0002\u00ff\u00fe\u0000\u0000\u0000\u0000\u0000\u00ff\u00ff\u00fe\u00fe\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fc\u00fc\u00fc\u00fc\u00fc\u00fc\u0000\u0000\u0001\u0001\u0001\u0002\u00fe\u00fe\u00fd\u00ff\u00ff\u00fe\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u00fe\u00fe\u00fe\u00fe\u00fd\u00ff\u00ff\u00ff\u00ff\u00fe\u009c\u009c\u009c\u009c\u009c\u009c\u009c\u009c\u009c\u009c\u009c\u009c\u009c\u009c\u009c\u009c\u00fe\u0000\u009c\u009c\u009c\u009c\u0000\u00ff\u00fe\u00ff\u00ff\u00ff\u0000\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u0000\u0000\u0000\u0000\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u0000\u00ff\u00ff\u00ff\u00ff\u0001\u00ff\u00ff\u00fe\u00ff\u00ff\u0000\u0000\u0000\u00ff\u00ff\u00ff\u0000\u0000\u0000\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u0000\u00fd\u00fd\u00fd\u00fd\u00fc\u00ff\u00ff\u00ff\u0000\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fe\u00fc\u00fc\u00fc\u00fc\u00fc\u00fc\u0000\u0001\u0001\u0002\u00fe\u00fd\u00ff\u00fe\u0000\u0001\u0001\u0002\u00fe\u00fd\u00ff\u00fe\u009c\u009c\u009c\u009c\u009c\u009c\u009c\u009c\u009c\u009c\u00ff\u00fe\u0001\u0002\u00ff\u00ff\u00ff\u00ff\u00ff\u0000\u00fe\u00fe\u00fe\u00fe\u00fe\u0000\u0000\u00ff\u0000\u0001\u0001\u0000\u0001\u00ff\u0000\u00ff\u00ff\u0000\u00fd\u00fc";

}
