/* **DO NOT EDIT THIS FILE** */
/*
 * Copyright 2004 Sun Microsystems, Inc. All Rights Reserved.
 *
 * This software is the proprietary information of Sun Microsystems, Inc.
 * Use is subject to license terms.
 *
 * This is a part of the Squawk JVM.
 */

package com.sun.squawk.vm;

import com.sun.squawk.compiler.*;
/**
 * This class defines the native bytecode despatch table.
 * It was automatically generated as a part of the build process
 * and should not be edited by hand.
 *
 * @author   Nik Shaylor
 */
abstract class InterpreterNative extends InterpreterSwitch {

    void do_nativeswitch() {
        nativebind(Native.java_lang_VM$addToClassStateCache);
            nativepop(OOP); // java.lang.Object
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_VM$addToClassStateCache);
            nativedone();

        nativebind(Native.java_lang_VM$allocate);
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            nativepop(INT); // int
            invokenativeswapping(Native.java_lang_VM$allocate);
            nativepush(OOP); // java.lang.Object
            nativedone();

        nativebind(Native.java_lang_VM$allocateVirtualStack);
            nativepop(INT); // int
            invokenativeswapping(Native.java_lang_VM$allocateVirtualStack);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_VM$asKlass);
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_VM$asKlass);
            nativepush(OOP); // java.lang.Klass
            nativedone();

        nativebind(Native.java_lang_VM$asThread);
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_VM$asThread);
            nativepush(OOP); // java.lang.Thread
            nativedone();

        nativebind(Native.java_lang_VM$callStaticNoParm);
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Klass
            invokenativeswapping(Native.java_lang_VM$callStaticNoParm);
            nativedone();

        nativebind(Native.java_lang_VM$callStaticOneParm);
            nativepop(OOP); // java.lang.Object
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Klass
            invokenativeswapping(Native.java_lang_VM$callStaticOneParm);
            nativedone();

        nativebind(Native.java_lang_VM$deadbeef);
            nativepop(OOP); // java.lang.Object
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_VM$deadbeef);
            nativedone();

        nativebind(Native.java_lang_VM$executeCIO);
/*if[INCLUDE_EXECUTECIO_PARMS]*/
            nativepop(OOP); // java.lang.Object
            nativepop(OOP); // java.lang.Object
            nativepop(INT); // int
            nativepop(INT); // int
            nativepop(INT); // int
            nativepop(INT); // int
            nativepop(INT); // int
            nativepop(INT); // int
            nativepop(INT); // int
            nativepop(INT); // int
            nativepop(INT); // int
/*end[INCLUDE_EXECUTECIO_PARMS]*/
            invokenativeswapping(Native.java_lang_VM$executeCIO);
            nativedone();

        nativebind(Native.java_lang_VM$executeCOG);
            nativepop(OOP); // java.lang.ObjectMemorySerializer$ControlBlock
            nativepop(OOP); // java.lang.Object
            nativepop(INT); // int
            invokenativeswapping(Native.java_lang_VM$executeCOG);
            nativedone();

        nativebind(Native.java_lang_VM$executeGC);
            invokenativeswapping(Native.java_lang_VM$executeGC);
            nativedone();

        nativebind(Native.java_lang_VM$fatalVMError);
            invokenativeswapping(Native.java_lang_VM$fatalVMError);
            nativedone();

        nativebind(Native.java_lang_VM$getBranchCount);
            invokenativeswapping(Native.java_lang_VM$getBranchCount);
            nativepush(LONG); // long
            nativedone();

        nativebind(Native.java_lang_VM$getFP);
            invokenativeswapping(Native.java_lang_VM$getFP);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_VM$getGlobalAddr);
            nativepop(INT); // int
            invokenativeswapping(Native.java_lang_VM$getGlobalAddr);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_VM$getGlobalAddrCount);
            invokenativeswapping(Native.java_lang_VM$getGlobalAddrCount);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_VM$getGlobalInt);
            nativepop(INT); // int
            invokenativeswapping(Native.java_lang_VM$getGlobalInt);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_VM$getGlobalIntCount);
            invokenativeswapping(Native.java_lang_VM$getGlobalIntCount);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_VM$getGlobalOop);
            nativepop(INT); // int
            invokenativeswapping(Native.java_lang_VM$getGlobalOop);
            nativepush(OOP); // java.lang.Object
            nativedone();

        nativebind(Native.java_lang_VM$getGlobalOopCount);
            invokenativeswapping(Native.java_lang_VM$getGlobalOopCount);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_VM$getGlobalOopTable);
            invokenativeswapping(Native.java_lang_VM$getGlobalOopTable);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_VM$getMP);
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_VM$getMP);
            nativepush(OOP); // java.lang.Object
            nativedone();

        nativebind(Native.java_lang_VM$getPreviousFP);
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_VM$getPreviousFP);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_VM$getPreviousIP);
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_VM$getPreviousIP);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_VM$hasVirtualMonitorObject);
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_VM$hasVirtualMonitorObject);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_VM$hashcode);
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_VM$hashcode);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_VM$invalidateClassStateCache);
            invokenativeswapping(Native.java_lang_VM$invalidateClassStateCache);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_VM$isBigEndian);
            invokenativeswapping(Native.java_lang_VM$isBigEndian);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_VM$removeVirtualMonitorObject);
            invokenativeswapping(Native.java_lang_VM$removeVirtualMonitorObject);
            nativepush(OOP); // java.lang.Object
            nativedone();

        nativebind(Native.java_lang_VM$serviceResult);
            invokenativeswapping(Native.java_lang_VM$serviceResult);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_VM$setGlobalAddr);
            nativepop(INT); // int
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_VM$setGlobalAddr);
            nativedone();

        nativebind(Native.java_lang_VM$setGlobalInt);
            nativepop(INT); // int
            nativepop(INT); // int
            invokenativeswapping(Native.java_lang_VM$setGlobalInt);
            nativedone();

        nativebind(Native.java_lang_VM$setGlobalOop);
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_VM$setGlobalOop);
            nativedone();

        nativebind(Native.java_lang_VM$setPreviousFP);
            nativepop(REF); // java.lang.Address
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_VM$setPreviousFP);
            nativedone();

        nativebind(Native.java_lang_VM$setPreviousIP);
            nativepop(REF); // java.lang.Address
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_VM$setPreviousIP);
            nativedone();

        nativebind(Native.java_lang_VM$threadSwitch);
            invokenativeswapping(Native.java_lang_VM$threadSwitch);
            nativedone();

        nativebind(Native.java_lang_VM$zeroWords);
            nativepop(OOP); // java.lang.Object
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_VM$zeroWords);
            nativedone();

        nativebind(Native.java_lang_Address$add);
            nativepop(INT); // int
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$add);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Address$addOffset);
            nativepop(WORD); // java.lang.Offset
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$addOffset);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Address$and);
            nativepop(OOP); // java.lang.UWord
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$and);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Address$diff);
            nativepop(REF); // java.lang.Address
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$diff);
            nativepush(WORD); // java.lang.Offset
            nativedone();

        nativebind(Native.java_lang_Address$eq);
            nativepop(REF); // java.lang.Address
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$eq);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Address$fromObject);
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Address$fromObject);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Address$fromPrimitive);
            nativepop(LONG); // long
            invokenativeswapping(Native.java_lang_Address$fromPrimitive);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Address$hi);
            nativepop(REF); // java.lang.Address
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$hi);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Address$hieq);
            nativepop(REF); // java.lang.Address
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$hieq);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Address$isMax);
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$isMax);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Address$isZero);
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$isZero);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Address$lo);
            nativepop(REF); // java.lang.Address
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$lo);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Address$loeq);
            nativepop(REF); // java.lang.Address
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$loeq);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Address$max);
            invokenativeswapping(Native.java_lang_Address$max);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Address$ne);
            nativepop(REF); // java.lang.Address
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$ne);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Address$or);
            nativepop(OOP); // java.lang.UWord
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$or);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Address$roundDown);
            nativepop(INT); // int
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$roundDown);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Address$roundDownToWord);
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$roundDownToWord);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Address$roundUp);
            nativepop(INT); // int
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$roundUp);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Address$roundUpToWord);
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$roundUpToWord);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Address$sub);
            nativepop(INT); // int
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$sub);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Address$subOffset);
            nativepop(WORD); // java.lang.Offset
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$subOffset);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Address$toObject);
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$toObject);
            nativepush(OOP); // java.lang.Object
            nativedone();

        nativebind(Native.java_lang_Address$toUWord);
            nativepop(REF); // java.lang.Address (receiver)
            invokenativeswapping(Native.java_lang_Address$toUWord);
            nativepush(OOP); // java.lang.UWord
            nativedone();

        nativebind(Native.java_lang_Address$zero);
            invokenativeswapping(Native.java_lang_Address$zero);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_UWord$and);
            nativepop(OOP); // java.lang.UWord
            nativepop(OOP); // java.lang.UWord (receiver)
            invokenativeswapping(Native.java_lang_UWord$and);
            nativepush(OOP); // java.lang.UWord
            nativedone();

        nativebind(Native.java_lang_UWord$eq);
            nativepop(OOP); // java.lang.UWord
            nativepop(OOP); // java.lang.UWord (receiver)
            invokenativeswapping(Native.java_lang_UWord$eq);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_UWord$fromPrimitive);
            nativepop(LONG); // long
            invokenativeswapping(Native.java_lang_UWord$fromPrimitive);
            nativepush(OOP); // java.lang.UWord
            nativedone();

        nativebind(Native.java_lang_UWord$hi);
            nativepop(OOP); // java.lang.UWord
            nativepop(OOP); // java.lang.UWord (receiver)
            invokenativeswapping(Native.java_lang_UWord$hi);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_UWord$hieq);
            nativepop(OOP); // java.lang.UWord
            nativepop(OOP); // java.lang.UWord (receiver)
            invokenativeswapping(Native.java_lang_UWord$hieq);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_UWord$isMax);
            nativepop(OOP); // java.lang.UWord (receiver)
            invokenativeswapping(Native.java_lang_UWord$isMax);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_UWord$isZero);
            nativepop(OOP); // java.lang.UWord (receiver)
            invokenativeswapping(Native.java_lang_UWord$isZero);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_UWord$lo);
            nativepop(OOP); // java.lang.UWord
            nativepop(OOP); // java.lang.UWord (receiver)
            invokenativeswapping(Native.java_lang_UWord$lo);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_UWord$loeq);
            nativepop(OOP); // java.lang.UWord
            nativepop(OOP); // java.lang.UWord (receiver)
            invokenativeswapping(Native.java_lang_UWord$loeq);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_UWord$max);
            invokenativeswapping(Native.java_lang_UWord$max);
            nativepush(OOP); // java.lang.UWord
            nativedone();

        nativebind(Native.java_lang_UWord$ne);
            nativepop(OOP); // java.lang.UWord
            nativepop(OOP); // java.lang.UWord (receiver)
            invokenativeswapping(Native.java_lang_UWord$ne);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_UWord$or);
            nativepop(OOP); // java.lang.UWord
            nativepop(OOP); // java.lang.UWord (receiver)
            invokenativeswapping(Native.java_lang_UWord$or);
            nativepush(OOP); // java.lang.UWord
            nativedone();

        nativebind(Native.java_lang_UWord$toInt);
            nativepop(OOP); // java.lang.UWord (receiver)
            invokenativeswapping(Native.java_lang_UWord$toInt);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_UWord$toOffset);
            nativepop(OOP); // java.lang.UWord (receiver)
            invokenativeswapping(Native.java_lang_UWord$toOffset);
            nativepush(WORD); // java.lang.Offset
            nativedone();

        nativebind(Native.java_lang_UWord$toPrimitive);
            nativepop(OOP); // java.lang.UWord (receiver)
            invokenativeswapping(Native.java_lang_UWord$toPrimitive);
            nativepush(LONG); // long
            nativedone();

        nativebind(Native.java_lang_UWord$zero);
            invokenativeswapping(Native.java_lang_UWord$zero);
            nativepush(OOP); // java.lang.UWord
            nativedone();

        nativebind(Native.java_lang_Offset$add);
            nativepop(INT); // int
            nativepop(WORD); // java.lang.Offset (receiver)
            invokenativeswapping(Native.java_lang_Offset$add);
            nativepush(WORD); // java.lang.Offset
            nativedone();

        nativebind(Native.java_lang_Offset$bytesToWords);
            nativepop(WORD); // java.lang.Offset (receiver)
            invokenativeswapping(Native.java_lang_Offset$bytesToWords);
            nativepush(WORD); // java.lang.Offset
            nativedone();

        nativebind(Native.java_lang_Offset$eq);
            nativepop(WORD); // java.lang.Offset
            nativepop(WORD); // java.lang.Offset (receiver)
            invokenativeswapping(Native.java_lang_Offset$eq);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Offset$fromPrimitive);
            nativepop(LONG); // long
            invokenativeswapping(Native.java_lang_Offset$fromPrimitive);
            nativepush(WORD); // java.lang.Offset
            nativedone();

        nativebind(Native.java_lang_Offset$ge);
            nativepop(WORD); // java.lang.Offset
            nativepop(WORD); // java.lang.Offset (receiver)
            invokenativeswapping(Native.java_lang_Offset$ge);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Offset$gt);
            nativepop(WORD); // java.lang.Offset
            nativepop(WORD); // java.lang.Offset (receiver)
            invokenativeswapping(Native.java_lang_Offset$gt);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Offset$isZero);
            nativepop(WORD); // java.lang.Offset (receiver)
            invokenativeswapping(Native.java_lang_Offset$isZero);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Offset$le);
            nativepop(WORD); // java.lang.Offset
            nativepop(WORD); // java.lang.Offset (receiver)
            invokenativeswapping(Native.java_lang_Offset$le);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Offset$lt);
            nativepop(WORD); // java.lang.Offset
            nativepop(WORD); // java.lang.Offset (receiver)
            invokenativeswapping(Native.java_lang_Offset$lt);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Offset$ne);
            nativepop(WORD); // java.lang.Offset
            nativepop(WORD); // java.lang.Offset (receiver)
            invokenativeswapping(Native.java_lang_Offset$ne);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Offset$sub);
            nativepop(INT); // int
            nativepop(WORD); // java.lang.Offset (receiver)
            invokenativeswapping(Native.java_lang_Offset$sub);
            nativepush(WORD); // java.lang.Offset
            nativedone();

        nativebind(Native.java_lang_Offset$toInt);
            nativepop(WORD); // java.lang.Offset (receiver)
            invokenativeswapping(Native.java_lang_Offset$toInt);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_Offset$toPrimitive);
            nativepop(WORD); // java.lang.Offset (receiver)
            invokenativeswapping(Native.java_lang_Offset$toPrimitive);
            nativepush(LONG); // long
            nativedone();

        nativebind(Native.java_lang_Offset$toUWord);
            nativepop(WORD); // java.lang.Offset (receiver)
            invokenativeswapping(Native.java_lang_Offset$toUWord);
            nativepush(OOP); // java.lang.UWord
            nativedone();

        nativebind(Native.java_lang_Offset$wordsToBytes);
            nativepop(WORD); // java.lang.Offset (receiver)
            invokenativeswapping(Native.java_lang_Offset$wordsToBytes);
            nativepush(WORD); // java.lang.Offset
            nativedone();

        nativebind(Native.java_lang_Offset$zero);
            invokenativeswapping(Native.java_lang_Offset$zero);
            nativepush(WORD); // java.lang.Offset
            nativedone();

        nativebind(Native.java_lang_Unsafe$charAt);
            nativepop(INT); // int
            nativepop(OOP); // java.lang.String
            invokenativeswapping(Native.java_lang_Unsafe$charAt);
            nativepush(INT); // char
            nativedone();

        nativebind(Native.java_lang_Unsafe$copyTypes);
            nativepop(INT); // int
            nativepop(REF); // java.lang.Address
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_Unsafe$copyTypes);
            nativedone();

        nativebind(Native.java_lang_Unsafe$getAsByte);
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$getAsByte);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_Unsafe$getAsUWord);
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$getAsUWord);
            nativepush(OOP); // java.lang.UWord
            nativedone();

        nativebind(Native.java_lang_Unsafe$getByte);
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$getByte);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_Unsafe$getChar);
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$getChar);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_Unsafe$getInt);
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$getInt);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_Unsafe$getLong);
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$getLong);
            nativepush(LONG); // long
            nativedone();

        nativebind(Native.java_lang_Unsafe$getLongAtWord);
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$getLongAtWord);
            nativepush(LONG); // long
            nativedone();

        nativebind(Native.java_lang_Unsafe$getObject);
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$getObject);
            nativepush(OOP); // java.lang.Object
            nativedone();

        nativebind(Native.java_lang_Unsafe$getShort);
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$getShort);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_Unsafe$getType);
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_Unsafe$getType);
            nativepush(INT); // byte
            nativedone();

        nativebind(Native.java_lang_Unsafe$getUWord);
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$getUWord);
            nativepush(OOP); // java.lang.UWord
            nativedone();

        nativebind(Native.java_lang_Unsafe$setAddress);
            nativepop(OOP); // java.lang.Object
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$setAddress);
            nativedone();

        nativebind(Native.java_lang_Unsafe$setByte);
            nativepop(INT); // int
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$setByte);
            nativedone();

        nativebind(Native.java_lang_Unsafe$setChar);
            nativepop(INT); // int
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$setChar);
            nativedone();

        nativebind(Native.java_lang_Unsafe$setInt);
            nativepop(INT); // int
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$setInt);
            nativedone();

        nativebind(Native.java_lang_Unsafe$setLong);
            nativepop(LONG); // long
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$setLong);
            nativedone();

        nativebind(Native.java_lang_Unsafe$setLongAtWord);
            nativepop(LONG); // long
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$setLongAtWord);
            nativedone();

        nativebind(Native.java_lang_Unsafe$setObject);
            nativepop(OOP); // java.lang.Object
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$setObject);
            nativedone();

        nativebind(Native.java_lang_Unsafe$setShort);
            nativepop(INT); // int
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$setShort);
            nativedone();

        nativebind(Native.java_lang_Unsafe$setType);
            nativepop(INT); // int
            nativepop(INT); // byte
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_Unsafe$setType);
            nativedone();

        nativebind(Native.java_lang_Unsafe$setUWord);
            nativepop(OOP); // java.lang.UWord
            nativepop(INT); // int
            nativepop(OOP); // java.lang.Object
            invokenativeswapping(Native.java_lang_Unsafe$setUWord);
            nativedone();

        nativebind(Native.java_lang_CheneyCollector$memoryProtect);
            nativepop(REF); // java.lang.Address
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_CheneyCollector$memoryProtect);
            nativedone();

        nativebind(Native.java_lang_ServiceOperation$cioExecute);
            invokenativeswapping(Native.java_lang_ServiceOperation$cioExecute);
            nativedone();

        nativebind(Native.java_lang_Lisp2Bitmap$clearBitFor);
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_Lisp2Bitmap$clearBitFor);
            nativedone();

        nativebind(Native.java_lang_Lisp2Bitmap$clearBitsFor);
            nativepop(REF); // java.lang.Address
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_Lisp2Bitmap$clearBitsFor);
            nativedone();

        nativebind(Native.java_lang_Lisp2Bitmap$getAddressForBitmapWord);
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_Lisp2Bitmap$getAddressForBitmapWord);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Lisp2Bitmap$getAddressOfBitmapWordFor);
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_Lisp2Bitmap$getAddressOfBitmapWordFor);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Lisp2Bitmap$iterate);
            invokenativeswapping(Native.java_lang_Lisp2Bitmap$iterate);
            nativepush(REF); // java.lang.Address
            nativedone();

        nativebind(Native.java_lang_Lisp2Bitmap$setBitFor);
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_Lisp2Bitmap$setBitFor);
            nativedone();

        nativebind(Native.java_lang_Lisp2Bitmap$testAndSetBitFor);
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_Lisp2Bitmap$testAndSetBitFor);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_Lisp2Bitmap$testBitFor);
            nativepop(REF); // java.lang.Address
            invokenativeswapping(Native.java_lang_Lisp2Bitmap$testBitFor);
            nativepush(INT); // boolean
            nativedone();

        nativebind(Native.java_lang_VM$lcmp);
            nativepop(LONG); // long
            nativepop(LONG); // long
            invokenativeswapping(Native.java_lang_VM$lcmp);
            nativepush(INT); // int
            nativedone();

/*if[FLOATS]*/
        nativebind(Native.java_lang_VM$fcmpl);
            nativepop(FLOAT); // float
            nativepop(FLOAT); // float
            invokenativeswapping(Native.java_lang_VM$fcmpl);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_VM$fcmpg);
            nativepop(FLOAT); // float
            nativepop(FLOAT); // float
            invokenativeswapping(Native.java_lang_VM$fcmpg);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_VM$dcmpl);
            nativepop(DOUBLE); // double
            nativepop(DOUBLE); // double
            invokenativeswapping(Native.java_lang_VM$dcmpl);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_VM$dcmpg);
            nativepop(DOUBLE); // double
            nativepop(DOUBLE); // double
            invokenativeswapping(Native.java_lang_VM$dcmpg);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_VM$math);
            nativepop(DOUBLE); // double
            nativepop(DOUBLE); // double
            invokenativeswapping(Native.java_lang_VM$math);
            nativepush(DOUBLE); // double
            nativedone();

        nativebind(Native.java_lang_VM$floatToIntBits);
            nativepop(FLOAT); // float
            invokenativeswapping(Native.java_lang_VM$floatToIntBits);
            nativepush(INT); // int
            nativedone();

        nativebind(Native.java_lang_VM$doubleToLongBits);
            nativepop(DOUBLE); // double
            invokenativeswapping(Native.java_lang_VM$doubleToLongBits);
            nativepush(LONG); // long
            nativedone();

        nativebind(Native.java_lang_VM$intBitsToFloat);
            nativepop(INT); // int
            invokenativeswapping(Native.java_lang_VM$intBitsToFloat);
            nativepush(FLOAT); // float
            nativedone();

        nativebind(Native.java_lang_VM$longBitsToDouble);
            nativepop(LONG); // long
            invokenativeswapping(Native.java_lang_VM$longBitsToDouble);
            nativepush(DOUBLE); // double
            nativedone();

/*end[FLOATS]*/
    }
    abstract protected void nativepop(Type t);
    abstract protected void nativepush(Type t);
    abstract protected void nativebind(int x);
    abstract protected void nativedone();
}
